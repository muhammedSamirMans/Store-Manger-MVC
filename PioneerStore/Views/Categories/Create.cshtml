@model PioneerStore.Models.Category

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    <div class="card">
        <div class="card-body">
                <h4 class="card-title" style="text-align:center; color:indianred"> Create Category</h4>
           
            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SillingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SillingPrice, new { htmlAttributes = new { @class = "form-control" }, @id = "SillingPrice" })
                        @Html.ValidationMessageFor(model => model.SillingPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PurechcastPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PurechcastPrice, new { htmlAttributes = new { @class = "form-control" }, @id = "PurechcastPrice" })
                        @Html.ValidationMessageFor(model => model.PurechcastPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MainUint, "MainUint", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("MainUint", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MainUint, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubUint, "SubUint", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubUint", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubUint, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Precent of AddedTax(%)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddedTax, new { htmlAttributes = new { @class = "form-control" }, @id = "AddedTax" })
                        @Html.ValidationMessageFor(model => model.AddedTax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary btn-rounded" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
    @Html.AntiForgeryToken()

   
}


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".error").remove();
        $("#SillingPrice").change(function () {
            var sillingPrice = $(this).val();
            if (sillingPrice < 0) {
                $('#SillingPrice').after('<span class="error" style="color:red;">This field must be postive</span>');
            }
            else {
                $(".error").remove();
            }
        })
        $("#PurechcastPrice").change(function () {
            var purechcastPrice = $(this).val();
            if (purechcastPrice < 0) {
                $('#PurechcastPrice').after('<span class="error" style="color:red;">This field must be postive</span>');
            }
            else {
                $(".error").remove();
            }
        })
        $("#AddedTax").change(function () {
            var addedTax = $(this).val();
            if (addedTax < 0) {
                $('#AddedTax').after('<span class="error" style="color:red;">This field must be postive</span>');
            }
            else {
                $(".error").remove();
            }
        })
    })
</script>